#!/bin/bash -e

# Args:
#   p1: build identifier, eg. 1118 (absolute) or -5 (relative). default -1
#   p2: build identifier, eg. 1119 (absolute) or -4 (relative). default 0
#
# Env args:
#   PROFILE1   profile of p1, default x86
#   PROFILE2   profile of p2, default x86
#   (PROFILE will set both PROFILE1 and PROFILE2)
#
#   MINDELTA     minimum size delta to be reported, default $DEFMINDELTA. Disable with 0 (no size comparison)
#   REVERSE      reverse comparison of p1/p2, default blank (disabled) - any value to enable
#   NOMISSING    exclude missing not found in p1, default blank (disabled) - any value to enable
#   NONEW        exclude new files found in p2, default blank (disabled) - any value to enable
#   NOMAPSONAME  don't map p2 soname to p1 soname when soname changes (and don't warn when detected), default blank (do map)
#                any value to enable and treat files with different soname version as unique files (both will appear in missing/new)
#   NOMAPKERNEL  don't map p2 kernel modules to p1 modules, default blank (do remap)
#                any value to enable and treat files from different kernel versions as unique files (both will appear in missing/new)
#   NAMESORT     sort within each group by filename not by delta, default blank (sort by delta) - any value to enable
#
#   NOCLEANUP    don't cleanup work files, default blank (disabled) - any value to enable
#
# Example:
#
#   PROFILE1=pi2 PROFILE2=pi2-testing ./squashfscmp 1118 1119b
#   NAMESORT=y PROFILE1=x86 PROFILE2=x86 ./squashfscmp -3 0
#

BIN=$(dirname $0)
DEFMINDELTA=0

export MINDELTA=${MINDELTA:-${DEFMINDELTA}}

[ -z "${TMP_PATH}" ] && TMP_PATH="/tmp/librelec/squashfscmp"
TMP1_PATH="${TMP_PATH}/t1"
TMP2_PATH="${TMP_PATH}/t2"

[ -z "${NOCLEANUP}" ] && trap "rm -rf ${TMP1_PATH} ${TMP2_PATH}" EXIT
rm -rf ${TMP1_PATH} ${TMP2_PATH}

extractaddons()
{
  local addons_path="$(pwd)/${1}" tmp_path="${2}"
  ( set -e
    local newbuild kfile

    mkdir -p "${tmp_path}/addons"
    cd "${tmp_path}/addons"

    find "${addons_path}" -name '*.zip' \
      | xargs -n1 unzip

    find . -type f -print0 | xargs -0 ls --full-time > "${tmp_path}/data"
    # find . -type l -print0 | xargs -0 ls --full-time | grep "\-> busybox$" >> "${tmp_path}/data"
    find . -type l -print0 | xargs -0 ls --full-time >> "${tmp_path}/data"
  )
}

comparefiles()
{
  local build1=$1 build2=$2 files1=$3 files2=$4
  local color
  local pylocation
  
  pylocation=/freenas/data
  [ ! -d ${pylocation} ] && pylocation=$BIN

  if [ -z "${COLOR}" -a -z "${COLOUR}" ]; then
    if [ -t 1 ]; then
      color="ON"
    else
      color="OFF"
    fi
  elif [ -n "${COLOR}" ]; then
    color="${COLOR}"
  elif [ -n "${COLOUR}" ]; then
    color="${COLOUR}"
  fi

  COLOR=${color} ${pylocation}/squashfscmp.py ${build1} ${build2} ${files1} ${files2}
}

extractaddons "${1}" "${TMP1_PATH}"
extractaddons "${2}" "${TMP2_PATH}"

if [ -z "${REVERSE}" ]; then
  comparefiles "${1}" "${2}" "${TMP1_PATH}/data" "${TMP2_PATH}/data"
else
  comparefiles "${2}" "${1}" "${TMP2_PATH}/data" "${TMP1_PATH}/data"
fi
